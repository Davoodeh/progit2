=== گیت لب

(((serving repositories, GitLab)))(((گیت لب)))

گیت وب از آنچه فکر می‌کنید هم ساده‌تر است.
اگه به دنبال یک گیت تحت وب مدرن، یک گیت سرور با امکانات کامل، چندین راه حل اوپن سورس  موجود هست که می‌توانید نصب و با آن کار کنید.
عنوان گیت‌لب یکی از معروف‌ترین‌ هاست، شما به عنوان مثال آن را نصب و استفاده خواهید کرد.
گیت‌لب کمی پیچیده‌تر از آپشن‌های گیت‌وب هست و ظاهرا نیازمند نگه‌داری بیشتری است.
اما یه گزینه با امکانات کامل‌تر است.

==== نصب و راه‌اندازی

گیت‌لب یک نرم‌افزار دیتابیس تحت وب است (مترجم: database-backed گونه‌ای از دیتابیس‌ها هستند که شامل عناصر کاربر نهایی نیست، مانند
 کوئری‌های ذخیره‌سازی، فرم‌ها، ماکرو و گزارشات.) پس نصب کردن آن ممکن است یکم پیچیده‌تر از دیگر سرورهای گیت باشد.
 خوش‌بختانه، این بخش از روند کاملا پشتیبانی شده و پر از مستندات کمکی است.

متدها و راه‌های دیگری هستند که می‌توانید از آن‌ها برای نصب گیت‌لب استفاده کنید.
بری شروع سریع، می‌توانید یک ماشین مجازی یا نرم‌افزار نصب آسان را از https://bitnami.com/stack/gitlab دانلود کنید،
و با بالا پایین کردن تنظیمات به محیط مورد نظر خود برسید.(((bitnami)))
یکی از قشنگی‌های Bitnami صفحه ورود است(قابل دسترسی با تایپ  →+alt)؛ به شما آدرس آی پی و نام کاربری و رمز‌عبور پیش فرض
را برای نصب گیت‌لب می‌گوید.

[[bitnami]]
صفحه ورود ماشین مجازی گیت لب Bitnami.
image::images/bitnami.png[صفحه ورود ماشین مجازی گیت لب Bitnami.]

برای هر چیز دیگری، فایل راهنمای گیت‌لب به readme نسخه انجمن را دنبال کنید، که می‌توانید آن در آدرس
https://gitlab.com/gitlab-org/gitlab-ce/tree/master[] پیدا کنید.
انجا شما یک دستیار برای نصب گی‌لب پیدا می‌کند که از ماشین مجازی در اقیانوس دیجیتال استفاده می‌کند، پکیج‌های DEB و RPM(همانطور که نوشته شده
 نسخه آزمایشی است).
 همچنین یک راهنما «غیر رسمی» در شروع راه‌اندازی گیت‌لب با یک سیستم‌عامل و دیتابیس غیر استاندارد موجود است،
 یک نصب اسکریپتی کاملا دستی، و کلی موضوعات دیگر.

==== مدیریت

پنل مدیریتی  گیت‌لب به وسیله وب قابل دسترسی است.
به راحتی مرورگر خود را به آدرس هاست یا آدرس آی پی که گیت‌لب را نصب کردید هدایت کنید، و به عنوان کاربر مدیر وارد شوید.
نام کاربری پیش فرض `admin@local.host` هست و رمز عبور پیش `5iveL!fe` است(که به محض ورود باید آن را برای حفظ امنیت تغییر دهید.)
وارد که شدید بر روی "Admin area" کلیک کنید که در قسمت منو در سمت راست بالا وجود دارد.

[[gitlab_menu]]
بخش پنل آدمین در منو گیت لب
image::images/gitlab-menu.png[بخش پنل آدمین در منو گیت لب]

===== کاربران
کابران، حساب‌هایی هستند که مربوط به مردم است.
حساب‌های کاربری پیچیدگی خاصی ندارد؛ مجموعه‌ای از اطلاعات شخصی که برای اطلاعات ورود استفاده می‌شود.
هر نام کاربری با یک *namespace* می‌آید،‌ که گروه فیزیکی از پروژهایی است که مربوط به آن کاربر است.
اگر کاربر +jane+ یکی پروژه داشته باشد به نام +project+، آدرس آن پروژه هست `http://server/jane/project`.

[[gitlab_users]]
صفحه مدیریت کاربران در گیت لب
image::images/gitlab-users.png[صفحه مدیریت کاربران در گیت لب]

حذف یک کاربر به وسیله دو راه انجام می‌شود.
`Blocking` با مسدود کردن یک کردن از اجازه دادن به او برای ورود به محیط گیت‌لب اجتناب می‌کنید، اما همه‌ی اطلاعات کاربر زیر
*namespace* اون بود باقی می‌ماند و همچنین کامیت‌‌های ثبت شده با ایمیل آن کاربر همچنان به حساب کاربر اون لینک خواهند ماند.

«از بین بردن یک کاربر»؛ در طرفی دیگر می‌توانید یک کاربر را به صورت کامل از دیتابیس و فایل‌سیستم حذف کنید.
همه پروژه و اطلاعات در namespace او پاک خواهد شد، و هر گروهی که او دارد نیز پاک خواهد شد و به طور مشخص
این امکان دائمی و نابود‌کننده است، و استفاده از آن کم پیش می‌آید.

[[_gitlab_groups_section]]
===== گروه‌ها

یک گروه گیت‌لب مشتکل از پروژه‌، با اطلاعاتی درباره اینکه چگونه کاربران اجازه دسترسی به آن پروژه‌‌ها دارند است.
هر گروه دارای یک namespace (همانطور که کاربران داشتند)، پس اگر گروه +training+ پروژه‌ای به نام +materials+ داشته باشند،
آدرس آن بدین صورت خواهد بود: `http://server/training/materials`.

[[gitlab_groups]]
صفحه مدیریت گروه گیت‌لب
image::images/gitlab-groups.png[صفحه مدیریت گروه گیت‌لب]

هر گروه به تعدادی از کاربران وصل است، هر کدام از آن‌ها سطح‌های دسترسی به پروژه‌های گروه و خود گروه را دارند.
این رنج از کابر مهمان(فقط باز کردن ایشو و گفت و گو کردن) تا مالک (کنترل کامل گروه، کابران و پروژه‌ها را دارد).
سطوح دسترسی بسیار زیاد هستند که آن‌ها را اینجا لیست کنیم،‌اما گیت‌لب یک لینک خیلی مفید و کامل در صفحه مدیریت دارد.

===== پروژه‌‌ها

یک پروژه در گیت با یک مخزن گیت رابطه دارد.
هر پروژه‌ای مربوط به یک namespace است یا یک کابر و یا یک گروه.
اگر پروژه مربوط به یک کاربر باشد، مالک پروژه کنترل مستقیم به تمامی کسانی به پروژه دسترسی دارند؛ دارد.
اگر پروژه مربوط به یک گروه باشد، سطوح دسترسی و سطوح کاربران تاثیر گذار است.

هر پروژه‌ای دارای یک سطح قابل مشاهده‌ است که هر هرکسی را که دسترسی خواندن به صفحه آن پروژه و مخزن دارد را کنترل می‌کند.
اگر یک پروژه خصوصی باشد، مالک پروژه باید صراحتا دسترسی هر کاربر را مشخص کند.
پروژه‌های داخلی برای هر کاربری که ورود کرده باشد قابل مشاهده‌ است، و پروژه‌ها عمومی برای همه‌ی افراد قابل مشاهده است.
به خاطر داشته باشید که این‌ها هر دو دسترسی `git fetch` و دسترسی از طریق رابطه کاربری سمت وب را کنترل می‌کند.

===== هوک‌ها

گیت‌لب از هوک‌ها نیز پشتیبانی می‌کند چه در سطح پروژه چه در سطح سیستمی.
برای هر کدام از این‌ها، در هر لحظه که رویداد‌ها انجام شوند، سرور گیت‌لب درخواست HTTP با متد POST همراه برخی توصیفاتی از نوع JSONE
می‌فرستد.
این یک روش عالی برای اتصال مخازن گیت‌ و نمونه گیت‌لب به دیگر اتوماسیو‌ن‌های بخش توسعه شما مانند سرور‌های CI، اتاق‌های گفت و گو یا
ابزاهای توسعه است.

==== راهنما ابتدایی

اولین کاری که در گیت‌لب می‌توانید انجام دهید ساخت یک پروژه جدید است.
این عمل با کلیک بر روی علامت «+» بر روی نوار ابزار امکان پذیر است.
از شما نام پروژه را خواهد خواست که شامل بخش نیم‌اسپس نیز می‌شود و اینکه چه چیز‌های قابل مشاهده هستند.
بیشتر کارهایی که اینجا مشخص می‌کنید دائمی نیستند و شما در آینده نیز این تغییرات را دستکاری کنید.
بر روی «Create Project» بزنید و تمام.

بعد از اینکه پروژه به وجود می‌آید، احتمالا می‌خواهید که آن را به مخزن لوکال گیت خود متصل کنید.
هر پروژه‌ای می‌تواند از طریق پروتکل‌های SSH, HTTPS قابل دسترسی باشد.
آدرس پروژه در قسمت بالای صفحه اصلی پروژه قابل مشاهده است.
برای مخزن‌ لوکال، با این دستور می‌توانید یک ریموت با نام `gitlab` به مبدا میزبان متصل کنید:

[source,console]
----
$ git remote add gitlab https://server/namespace/project.git
----

اگر هم نسخه کپی مخزن را به صورت لوکال در ندارید می‌توانید این دستور را اجرا کنید:

[source,console]
----
$ git clone https://server/namespace/project.git
----

رابطه کاربری تحت وب برای شما چندین امکان مفید و قابل استفاده از مخزن را فراهم می‌کند.
در هر صفحه‌ی اصلی پروژه می‌توانید فعالیت‌های اخیر را مشاهده کنید و لینک‌های بالا شما را به سمت فایل‌های پروژه و تاریخچه‌ی رویدادها و
کامیت‌ها هدایت می‌کند.

==== مشارکت و همکاری

ساده‌ترین راه برای کارکردن با یکدیگر بر یک پروژه گیت‌لب، اجازه دسترسی مستقیم پوش به مخزن گیت به دیگر کاربران است.
برای اضافه کردن یک کاربر به پروژه به قسمت «Members» در بخش تنظیمات پروژه بروید سپس یک کاربر جدید را با تعیین سطح دسترسی او به پروژه
بسازید (ما درباره سطوح دسترسی در قسمت <<_gitlab_groups_section>> بحث کرده‌ایم).
با اعطا کردن دسترسی `Devloper` یا بالاتر به کاربر،‌آن کابر می‌تواند به صورت مستقیم برنچ‌ها و کامیت‌های خود را به مخزن پوش کند.

راه دیگر برای مشارکت در پروژه،‌ استفاده در خواست ادغام یا `merge requests` است.
این امکان هر کاربری که بتواند پروژه را ببیند قادر می‌سازد تا در پروژه مشارکت کند که تحت نظارت مدیر مخزن است.
کاربرانی که دسترسی پوش به مخزن را نداشته باشند می‌توانند آن را `fork` کرده(یک کپی از پروژه را برای خود بسازند)، تغییرات مورد نظرشان را
به کپی مخزن پوش کنند و سپس درخواست مرج ایجاد کنند؛ این امکان کنترل کامل را به صاحب اصلی پروژه می‌دهد تا ببینید چه چیزی‌هایی چه موقع و
به چه اندازه تغییر کرده‌اند تا اجازه مشارکت به کاربران غیر قابل اعتماد یا غریبه داده شود.

هر درخواست مرج اجازه می‌دهد تا درباره خط به خط تغییرات بحث کنید(که توسط یک نوع نمایش دهنده کد پشتیبانی می‌شود)، همانطور درباره
بحث‌های عمومی و کلی این امکان وجود دارد.
در این بخش بیشتر بر امکانات مربوط به گیت در گیت‌لب تمرکز شده؛ بسیاری امکانات دیگر نیز برای شما و تیم شما فراهم شده است تا با یکدیگر
راحت‌تر کار کنید مانند ویکی پروژه یا ابزارهای نگداری سیستم.
یکی از مزایای گیت لب این است که به محض نصب و راه‌اندازی سرور، به ندرت با پیکربندی از طریق یک فایل سروکار دارید یا حتی وصل شدن و پیکیربندی
از طریق SSH، اکثر کارهای مدیریتی و تنظیماتی از طریق رابط گرافیکی تحت وب در دسترس است.
