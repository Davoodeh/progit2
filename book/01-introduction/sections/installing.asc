=== نصب گیت

پیش از اینکه بتوانید از گیت استفاده کنید باید آن را نصب کنید
حتی اگر هم اکنون گیت را نصب شده دارید بهتر است که آن را به آخرین نسخه بروز کنید.
شما می توان گیت را به عنوان یک بسته یا توسط نصاب دیگری نصب کنید و یا حتی سورس آن را دانلود کرده و خودتان کامپایل نمایید.

[NOTE]
====
این کتاب با نگارش 2.0.0. از گیت نوشته شده است.
اگرچه بیشتر دستوراتی که ما بکار می بریم باید در نسخه های پیشین نیز جوابگو باشد، شاید برخی از آنها با کمی تقییرات همراه باشند.
از آنجا که گیت در سازگاری با نسخه های پیشین خود بسیار خوب عمل می کند، نسخه های بعد از 2.0 نیز باید این دستورات را پشتیبانی کنند.
====

==== نصب بر روی لینوکس

(((Linux, installing)))
اگر قصد نصب Git بر روی لینوکس به واسطه یک نصاب باینری را دارید، می‌توانید این کار را از طریق ابزار مدیریت بسته های نرم‌افزاری که همراه توزیع موردنظر شما ارائه می‌شود انجام دهید. 
اگر توزیع شما Fedora است (یا هر توریع دیگری که بر پایه RPM باشد مثل RHEL و یا CentOS)، می‌توانید از `dnf` استفاده کنید:

[source,console]
----
$ sudo dnf install git-all
----

اگر توزیع بر پایه ی دبیان، همچون Ubuntu را بکار می گیرید می توانید `apt-get` را امتحان کنید:

[source,console]
----
$ sudo apt-get install git-all
----

برای نسخه های دیگری از سیستم های بر پایه یونیکس روش های نصب در وب سایت گیت به نشانی http://git-scm.com/download/linux[] وجود دارد.

==== نصب روی Mac

(((Mac, installing)))
راه های زیادی برای نصب گیت روی Mac وجود دارد.
شاید ساده ترین راه نصب ابزار خط فرمان Xcode باشد.(((Xcode)))
در نسخه ی Mavericks (10.9) و نسخه های بالاتر به راحتی با دستور '' از خط فرمان می توان این کار را کرد.
اگر گیت را نصب نکرده باشید، مراحل نصب پیش روی شما آورده می شود.

حنی اگر نسخه های بروزتری را برای نصب نیاز داشته باشید می توان از طریق نصاب باینری این کار را انجام دهید.
نصاب گیت برای macOS در وب سایت گیت به نشانی http://git-scm.com/download/mac[] نگه داری می شود و قابل دریافت است.

.Git macOS Installer.
image::images/git-osx-installer.png[Git macOS installer.]

همچنین گیت به عنوان بخشی از گیت هاب در هنگام نصب Mac قابل نصب است. رابط گرافیکی ابزار گیت در آنجا گزینه نصب خط فرمان را نیز دارد.
You can download that tool from the GitHub for Mac website, at http://mac.github.com[].

==== Installing on Windows

There are also a few ways to install Git on Windows.(((Windows, installing)))
The most official build is available for download on the Git website.
Just go to http://git-scm.com/download/win[] and the download will start automatically.
Note that this is a project called Git for Windows, which is separate from Git itself; for more information on it, go to https://git-for-windows.github.io/[].

To get an automated installation you can use the https://chocolatey.org/packages/git[Git Chocolatey package].
Note that the Chocolatey package is community maintained.

Another easy way to get Git installed is by installing GitHub for Windows.
The installer includes a command line version of Git as well as the GUI.
It also works well with Powershell, and sets up solid credential caching and sane CRLF settings.(((Powershell)))(((CRLF)))(((credential caching)))
We'll learn more about those things a little later, but suffice it to say they're things you want.
You can download this from the GitHub for Windows website, at http://windows.github.com[].

==== Installing from Source

Some people may instead find it useful to install Git from source, because you'll get the most recent version.
The binary installers tend to be a bit behind, though as Git has matured in recent years, this has made less of a difference.

If you do want to install Git from source, you need to have the following libraries that Git depends on: autotools, curl, zlib, openssl, expat, and libiconv.
For example, if you're on a system that has `dnf` (such as Fedora) or `apt-get` (such as a Debian-based system), you can use one of these commands to install the minimal dependencies for compiling and installing the Git binaries:

[source,console]
----
$ sudo dnf install dh-autoreconf curl-devel expat-devel gettext-devel \
  openssl-devel perl-devel zlib-devel
$ sudo apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev \
  gettext libz-dev libssl-dev
----

In order to be able to add the documentation in various formats (doc, html, info), these additional dependencies are required (Note: users of RHEL and RHEL-derivatives like CentOS and Scientific Linux will have to https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F[enable the EPEL repository] to download the `docbook2X` package):

[source,console]
----
$ sudo dnf install asciidoc xmlto docbook2X getopt
$ sudo apt-get install asciidoc xmlto docbook2x getopt
----

Additionally, if you're using Fedora/RHEL/RHEL-derivatives, you need to do this

[source,console]
----
$ sudo ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
----

due to binary name differences.

When you have all the necessary dependencies, you can go ahead and grab the latest tagged release tarball from several places.
You can get it via the kernel.org site, at https://www.kernel.org/pub/software/scm/git[], or the mirror on the GitHub website, at https://github.com/git/git/releases[].
It's generally a little clearer what the latest version is on the GitHub page, but the kernel.org page also has release signatures if you want to verify your download.

Then, compile and install:

[source,console]
----
$ tar -zxf git-2.0.0.tar.gz
$ cd git-2.0.0
$ make configure
$ ./configure --prefix=/usr
$ make all doc info
$ sudo make install install-doc install-html install-info
----

After this is done, you can also get Git via Git itself for updates:

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
----
