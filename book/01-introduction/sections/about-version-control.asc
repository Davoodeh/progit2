== حول التحكم بالنسخ

(((version control)))
ماهو ``التحكم بالنسخ``, ولما عليك أن تهتم ؟
التحكم بالنسخ هو نظام يقوم بتسجيل التغييرات التي تحدث على ملف او تحديد التغييرات التي تحدث على الملفات مع مرور الوقت بحيث تستطيع استخدام نسخة سابقة لاحقاً.
الأمثلة في هذا الكتاب, سوف تستخدم شفرة مصدرية للبرمجيات كالتي يتم استخدامها في الملفات التي تستخدم في التحكم بالنسخ, ولكن في الواقع يمكنك القيام بذلك مع أي نوع من انواع الملفات في الحاسوب تقريباً.

إذا كنت مصمم جرافيك أو ويب و تريد الأحتفاظ بكل نسخة من صورة او طبقة (الأمر الذي ستريده بالتأكيد), فاستخدام نظام التحكم بالنسخ (VCS) سيكون أمر حكيم جداً.
هذا سيسمح لك باستعادة ملفات محددة لحالة سابقة, استعادة المشروع كاملاَ إلى حالة سابقة, مقارنة التغييرات بمرور الوقت, رؤية من قام بتعديل شيء ما الذي قد يكون سبب مشكلة, من قدم مشكلة ومتى, و المزيد.
بالإضافة,  يمكنك الحصول على كل هذا مقابل جهد قليل جداً.

=== أنظمة التحكم بالنسخ المحلية

(((version control)))
الكثير من الناس يستخدمون التحكم بالنسخ كطريقة لنسخ الملفات إلى دليل آخر (ربما دليل بختم زمني, إذا كانوا أذكياء).
هذه المقاربة شائعة كثيراً لأن القيام بها أمر سهل جداً, ولكن إنه أيضاً مُعرِض لمشاكل لا تصدق.
من السهل نسيان في أي دليل أنت وبالخطأ الكتابة على الملف الخطأ او نسخه على ملفات أخرى لم تكن تقصدها.

للتعامل مع هذه المشكلة, المبرمجون منذ زمن طويل طوروا أنظمة تحكم بالنسخ التي تملك قاعدة بيانات بسيطة تبقي جميع التغييرات على الملفات تحت المراقبة.

.تحكم بالنسخ محلي.
image::images/local.png[Local version control diagram]

واحد من أكثر ادوات أنظمة التحكم بالنسخ شعبية كان نظام يدعى RCS, و الذي مازال يوزّع مع الكثير من حواسيب اليوم.
نظام RCS يعمل على إبقاء مجموعة الترقيعات (الفروقات بين الملفات) في صيغة خاصة على القرص; يستطيع بعدها إعادة إنشاء أي ملف كما كان بأي فترة زمنية بإعادة جميع هذه الترقيعات.

=== أنظمة التحكم بالنسخ المركزية

(((version control,centralized)))
المشكلة التالية الشائعة في ذاك الوقت كانت رغبة المطورين بالمشاركة بين بعضهم على أنظمتهم المختلفة.
للتعامل مع هذه المشكلة, تم تطوير أنظمة التحكم بالنسخ المركزية (CVCSs).
هذه الأنظمة مثل CVS, Subversion, و Perforce, كانت تملك خادم واحد يضم جميع الملفات التي تم إصدارها, وعدد من المستخدمين الذين يعملون على التحقق من الملفات من هذا المكان المركزي. (((CVS)))(((Subversion)))(((Perforce)))
للعديد من السنوات, كانت هذه الطريقة الرائدة للتحكم بالنسخ.

.التحكم بالنسخ المركزي.
image::images/centralized.png[Centralized version control diagram]

هذه الطريقة توفر العديد من المميزات, خاصةً بالمقارنة مع أنظمة التحكم بالنسخ المحلية.
على سبيل المثال, كل شخص يعلم إلى حدٍ ما ما يفعله كل شخص أخر على المشروع.
المدراء, لديهم تحكم بالغ الدقة على من يستطيع ان يفعل وماذا يفعل, ومن السهل إلى حدٍ كبير إدارة أنظمة التحكم بالنسخ المركزية مقارنةً بالتعامل مع قواعد بيانات محلية لكل مستخدم.

بكل الأحوال, هذه الطريقة يوجد فيها أيضاً العديد من السلبيات الخطرة.
الخطر الأكثر وضوحاً وجود مركز واحد فقط لإدارة الشيفرة.
فإذا توقف الخادم لساعة واحدة, عندئذ خلال هذه الساعة لا أحد يستطيع التعاون على الإطلاق أو حفظ التغييرات التي تم إصدارها لأي شيء يعمل عليه.
أو إذا تعطل القرص الصلب لقاعدة البيانات الرئيسية, و لم يتم الإحتفاظ بالنسخة الإحتياطية السليمة, سوف تفقد بكل تأكيد كل شيء -- السجل الكامل للمشروع باستثناء لقطات قام بها أشخاص على أجهزتهم المحلية.
أنظمة التحكم بالنسخ المحلية تعاني من نفس المشكلة -- ففي حالة إن كان لديك كامل السجل للمشروع في مكان واحد, فأنت تخاطر بفقدانك كل شيء.

=== أنظمة التحكم بالنسخ الموزعة

(((version control,distributed)))
هنا حيث بدأت أنظمة التحكم بالنسخ الموزعة.
في أنظمة التحكم بالنسخ الموزعة (مثل: Git, Mercurial, Bazaar or Darcs), المستخدمون لا يحصلون فقط على النسخة الأخيرة للملفات; بدلاً من ذلك, انظمة التحكم بالنسخ الموزعة توفر تاريخ الحاوية كاملاً.
وهكذا, إذا تعطل أي خادم, فإنه يمكن للأنظمة المرتبطة بهذا الخادم, لأي مستخدم يمكنه الحصول على نسخة للخادم لاستعادته مجدداً.
فكل نسخة تمثل نسخة احتياطية للبيانات كاملةً. 

.أنظمة التحكم بالنسخ الموزعة.
image::images/distributed.png[Distributed version control diagram]

إضافةً على ذلك, العديد من هذه الأنظمة تتعامل بشكل جيد مع العمل مع عدة حاويات بعيدة, لذا يمكنك التعاون مع مجموعات أشخاص مختلفة بطرق مختلفة في الوقت ذاته على نفس المشروع.
هذا يسمح لك بإعداد عدة أنواع مختلفة لسير العمل و الذي يستحيل القيام بذلك مع أنظمة التحكم بالنسخ المركزية, مثل النماذج الهرمية.
