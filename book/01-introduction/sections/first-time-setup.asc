[[_first_time]]
=== اولین راه‌اندازی گیت

حالا که گیت را در سیستم خود دارید، وقت آن است که چند شخصی‌سازی در محیط گیت‌تان انجام دهید.
شما باید این کارها را فقط یک بار به ازای هر کامپیوتری انجام دهید؛ این تنظیمات با بروزرسانی‌ها از بین نمی‌رود.
همچنین شما می‌توانید هر زمان که خواستید آنها را با اجرای دوباره دستورات تغییر دهید.

گیت با ابزاری به نام `git config` ارائه می‌شود که به شما امکان تنظیم و خواندن متغیرهای پیکربندی که تمام جوانب کاری گیت و ظاهر آن را مدیریت می‌کنند را می‌دهد.(((git commands, config)))
این متغیرها را می توان در سه مکان مختلف ذخیره کرد:

1. فایل `/etc/gitconfig`: شامل مقادیری است که برای تمام کاربران سیستم و تمام مخازن آنها اعمال می‌شود.
اگر از آپشن `--system` برای `git config` استفاده کنید خواندن و نوشتن با فایل مذکور انجام می‌شود.
(به دلیل اینکه این یک فایل تنظیم سیستمی است ممکن است شما به دسترسی سطح ادمین یا سوپریوزر احتیاج داشته باشید تا بتوانید آن را ویرایش کنید.)
2. فایل `~/.gitconfig` یا `~/.config/git/config`: مقادیر مختص به شما، کاربر، را نگه‌داری می‌کند.
شما می‌توانید با دادن آپشن `--global` به گیت بگویید تا مخصوصاً با این فایل خواندن و نوشتن را انجام بدهد.
3. فایل `config` درون پوشه گیت (همان `.git/config`) هر پروژه‌ای که در حال کار روی آن هستید: تنظیمات مختص به آن مخزن واحد را شامل می‌شود.
شما می‌توانید با آپشن `--local` گیت را مجبور کنید تا خواندن و نوشتن را روی این فایل انجام دهد. لکن درحقیقت به طور پیش‌فرض گیت همین کار را می‌کند.
(بدیهی است که نیاز دارید درون پوشهٔ آن مخزن گیت باشید تا این دستور به درستی کار کند.)

هر کدام از این مرتبه‌ها تنظیمات مرتبه قبل را بازنویسی می‌کنند. بنابراین مقادیر `.git/config` نسبت به مقادیر `/etc/gitconfig` اولویت دارند.

در سیستم‌های ویندوزی گیت به دنبال فایل `.gitconfig` در پوشه `$HOME` می‌گردد (که برای اکثریت `C:\Users\$USER` است).
علاوه بر آن همچنان به دنبال `/etc/gitconfig` می‌گردد،
اگرچه به دنبال آن به نسبت روت MSys می‌گردد که هنگامی نصب گیت روی سیستم ویندوزتان آنرا تنظیم می‌کنید.
اگر از نسخه 2.x یا بالاتر گیت برای ویندوز استفاده می‌کنید باید یک فایل پیکربندی مرتبه-سیستمی
در `C:\Documents and Settings\All Users\Application Data\Git\config` روی ویندوز XP و
در `C:\ProgramData\Git\config` روی ویندوز ویستا و جدیدتر وجود داشته باشد.
این فایل پیکربندی فقط با `git config -f <file>` به عنوان ادمین قبل ویرایش است.

شما می‌توانید تمام تنظیمات خود و اینکه از کجا می‌آیند را با دستور زیر بررسی کنید:

[source,console]
----
$ git config --list --show-origin
----

==== هویت شما

اولین کاری که باید هنگام نصب گیت انجام دهید تنظیم نام کاربری و آدرس ایمیل خود است.
این اصل مهمی است چرا که هر گیت کامیت از این اطلاعات استفاده می‌کند و به صورت غیرقابل تغییر درون کامیت‌هایی که شما می‌سازید حک می‌شود:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

مجدداً، فقط لازم است که یکبار این کار را انجام دهید (تنها در حالتی که آپشن `--global` را به دستور بدهید)، چرا که گیت همیشه از این اطلاعات برای هر کاری در آن سیستم استفاده خواهد کرد.
اگر می‌خواهید این را با یک نام یا ایمیل متفاوت برای پروژه‌ای خاص بازنویسی کنید، مادامی که در آن پروژه هستید می‌توانید بدون `--global` آنرا اجرا کنید.

بسیاری از ابزارهای گرافیکی هنگامی که شما برای اولین بار آنها را اجرا می‌کنید، به شما کمک می‌کنند این پیکربندی‌ها را انجام دهید.

[[_editor]]
==== ویرایشگر شما

اکنون که هویت شما تنظیم شده است، می‌توانید ویرایشگر پیش‌فرضی که هنگام تایپ پیام، گیت احتیاج دارد را تنظیم کنید.
در صورتی که تنظیم نشود گیت از ویرایشگر پیش‌فرض سیستم استفاده می‌کند.

اگر می‌خواهید که از ویرایشگر متفاوتی، مانند ایمکس، استفاده کنید می‌توانید مانند دستور زیر این کار را انجام دهید:

[source,console]
----
$ git config --global core.editor emacs
----

در یک سیستم ویندوزی اگر می‌خواهید که از یک ویرایشگر متفاوت استفاده کنید باید مسیر کامل فایل اجرایی آنرا مشخص کنید.
این مسیر می‌تواند بسته به نحوه پکیج‌شدن ویرایشگر شما متفاوت باشد.

نوت‌پد++ را نظر بگیرید، یک ویرایشگر محبوب برنامه‌نویسی، که از آنجایی که نسخه ۶۴ بیتی در زمان نوشتن این متن از تمام افزونه‌ها پشتیبانی نمی‌کند احتمالاً از نسخه ۳۲ بیت آن استفاده می‌کنید.
اگر شما از یک سیستم ویندوز ۲۳ بیتی استفاده می‌کنید یا یک ویرایشگر ۶۴ بیتی روی یک سیستم ۶۴ بیتی دارید، ورودی مسیر کامل چیزی شبیه زیر خواهد بود:

[source,console]
----
$ git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin"
----

[NOTE]
====
ویم، ایمکس و نوت‌پد++ ویرایشگرهای محبوبی هستند که اکثراً توسط کاربران سیستم‌های یونیکس-پایه مانند لینوکس و مک و یا حتی یک سیستم ویندوزی استفاده می‌شوند.
اگر شما از ادیتور دیگری یا نسخه ۳۲ بیتی استفاده می‌کنید، لطفاً دستورات مختص به اینکه چگونه ویرایشگر مورد علاقه خود را در گیت راه بنیدازید را از <<C-git-commands#_core_editor>> پیدا کنید.
====

[WARNING]
====
اگر اینگونه ویرایشگر خود را معرفی نکنید ممکن است در هنگام اجرای گیت دچار سردرگمی شوید.
مثلاً حین اجرای مثال‌ها، هنگامی که گیت ویرایشگر را روی یک سیستم ویندوزی فرا می‌خواند ممکن است پیش از اتمام دستور گیت به مشکل بخورد و متوجه نشوید.
====

==== بررسی تنظیمات شما

اگر می‌خواهید که تنظیمات پیکربندی خود را بررسی کنید، می‌توانید از دستور `git config --list` برای لیست کردن تمام تنظیماتی که گیت در مکان اجرا پیدا می‌کند استفاده کنید:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

شما ممکن است بعضی از کلیدها را بیش از سایر کلیدها ببینید چرا که گیت آن کلیدها را از فایل‌های مختلف می‌خواند (`/etc/gitconfig` و `~/.gitconfig` به طور مثال).
در این حالت گیت از آخرین مقداری که برای هر کلید یکتا می‌خواند استفاده می‌کند.

همچنین می‌توانید مقدار مد نظر گیت را برای یک کلید خاص را با `git cofnig <key>` بررسی کنید:(((git commands, config)))

[source,console]
----
$ git config user.name
John Doe
----

[NOTE]
====

از آنجا که ممکن است گیت مقدار یک متغییر پیکربندی را از بیش از یک فایل بخواند، احتمال دارد که یک مقدار غیرمنتظره برای یکی از این مقادیر پیدا کنید و چرایی این قضیه را ندانید.
در چنین مواردی می توانید از گیت _origin_ (مرجع) یک مقدار را پرس‌وجو کنید و به شما خواهد گفت که کدام فایل پیکربندی آخرین حرف را در تنظیم مقدار مورد نظر زده است:

[source,console]
----
$ git config --show-origin rerere.autoUpdate
file:/home/johndoe/.gitconfig	false
----
====
