[[_first_time]]
=== إعداد جيت للمرة الأولى

الأن انت تملك جيت على نظامك, سوف تحتاج للقيام ببعض الأمور لتخصيص بيئة جيت خاصتك.
يجب عليك القيام بهذه الأشياء مرة واحدة فقط على أي حاسب; سوف تبقى هذه الإعدادت بعد قيامك بالتحديثات.

يأتي جيت مع أداة تدعى `git config` التي تستمح لك بالحصول وإعداد متغيرات التكوين التي تتحكم بجميع جوانب عمل جيت.(((git commands, config)))
هذه المتغيرات يمكن أن تُخزن في عدة أماكن:

1. الملف `etc/gitconfig/`: يحتوي على المعلومات المستعملة من جميع المستخدمين على النظام وحاوياتهم.
   إذا قمت بتمرير الخيار `system--` للأمر `git config`, سيكتب ويقرأ من هذا الملف تحديداً.
   (لأنَّه ملف تكوين النظام, ستحتاج إلى صلاحية مدير نظام لتنفيذ التغييرات عليه.)
2. الملف `gitconfig./~` أو `config/git/config./~`: يحتوي على المعلومات لمستخدم معين, المستخدم الحالي للأداة.
   يمكنك جعل جيت يقرأ و يكتب على هذا الملف تحديداً بتمرير الخيار `global--`.
3. الملف `config` في الدليل جيت (والذي هو `git/config.`) في أي حاوية كنت تعمل عليها: يحتوي المعلومات الخاصة بتلك الحاوية.

كل مستوى يتجاوز المعلومات في المستوى السابق, حيث المعلومات في `git/config.` تتجاهل تلك الموجودة في `etc/gitconfig/`.

على أنظمة ويندوز, يبحث جيت عن الملف `gitconfig.` في الدليل `HOME$` (`C:\Users\$USER` عند معظم الناس).
إنَّه أيضاً يقوم بالبحث عن الملف `etc/gitconfig/` والذي يتعلق بمكان وجود MSys الذي تحدد مكان تواجده عندما تقوم بتثبيت جيت على نظامك.
إذا كنت تستخدم الإصدار 2 فما فوق من جيت لويندوز, هناك أيضاً ملف تكوين على مستوى النظام في المسار `C:\Documents and Settings\All Users\Application Data\Git\config` على ويندوز إكس بي, أو في المسار `C:\ProgramData\Git\config` على ويندوز فيستا أو الإصدارات الأحدث.
ملف التكوين يمكن تغييره فقط بتنفيذ الأمر `<git config -f <file` كمدير نظام.

==== إعداد هويتك الشخصية

الشيء الأول الذي يجب عليك فعله بعد تثبيت جيت هو إعداد اسم المستخدم و البريد الإلكتروني.
هذا أمر مهم لأنه في كل عملية إيداع بجيت يتم استخدام هذه المعلومات, وسيتم إضافتها إلى كل عمليات الإيداع التي تقوم ببدئها:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

مجددا, أنت تحتاج للقيام بهذا مرة واحدة فقط إذا مررت الخيار `global--`, لأن جيت عندها سيستخدم هذه المعلومات دائماً لأي شيء تفعله على النظام.
إذا كنت تريد إعادة تعيين اسم المستخدم والبريد الإلكتروني لمشاريع محددة, تستطيع تنفيذ الأمر من دون الخيار `global--` عندما تكون في مكان وجود المشروع.

العديد من الأدوات ذات الواجهة الرسومية ستساعدك للقيام بهذا عندما تقوم بتشغيلها للمرة الأولى.

==== إعداد المحرر الذي تستخدمه

الأن تم إعداد هويتك, تستطيع إعداد محرر النصوص الذي سيستخدمه جيت عندما يريد منك أن تحرر شيء ما.
إذا لم تقم بذلك, سيقوم جيت باستخدام محرر النصوص الإفتراضي للنظام.

إذا كنت تريد استخدام محرر نصوص مختلف, مثل إيماكس, تستطيع فعل التالي:

[source,console]
----
$ git config --global core.editor emacs
----

على نظام ويندوز, إذا كنت تريد استخدام محرر نصوص مختلف, يجب عليك تحديد المسار الكامل للملف التنفيذي للمحرر.
هذا قد يختلف إعتماداً على الطريقة التي حُزِم فيها محررك.

في حالة كان Notepad++ مثلاً, محرر لغات برمجة مشهور, فمن المرجح أنَّك تريد استخدام الإصدار 32bit, في حين أنَّ في أثناء الكتابة في الإصدار 64bit لا يدعم جميع الإضافات.
إذا كنت تستخدم نظام ويندوز 32bit, أو إذا كنت تملك محرر بمعمارية 64bit على نظام بمعمارية 64bit, سوف تحتاج لكتاب شيء من هذا القبيل:

[source,console]
----
$ git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -nosession"
----

إذا كنت تمتلك محرر بمعمارية 32bit على نظام 64bit, البرنامج سيكون مثبت في `C:\Program Files (x86)`:

[source,console]
----
$ git config --global core.editor "'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -nosession"
----

[NOTE]
====
محررات النصوص Vim, Emacs و Notepad++ مشهورين وعادةً ما يتم استخدامهم من قبل المطورين على الأنظمة الشبيهة بيونكس مثل لينكس و ماك أو على نظام ويندوز.
إذا لم تكن معتاداً على هذه المحررات, ربما عليك القيام ببحث عن التوجيهات المخصصة لكيفية إعداد محررك المفضل ليعمل مع جيت.
====

[WARNING]
====
قد تصل إلى حالة مربكة جداً عندما يحاول جيت تشغيل المحرر إذا لم تقم بإعداد محررك كما تم شرح الأمر سابقاً.
على سبيل المثال على نظام ويندوز قد تنتهي عملية جيت قبل فوات الأوان أثناء بدأ تحرير جيت.
====

==== التأكد من إعداداتك

إذا أردت التحقق من إعداداتك, تستطيع استخدام الأمر `git config --list` لسرد جميع الإعدادات التي استطاع جيت إيجادها في هذه المرحلة:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

قد تجد بعض الإعدادات لم تجدها من قبل, لأن جيت يقرأ نفس الإعدادات من ملفات مختلفة (`/etc/gitconfig` و `~/.gitconfig`, على سبيل المثال).
في هذه الحالة, يستخدم جيت أخر قيمة لكل خيار من الإعدادات مختلف يجده.

تستطيع أيضاً التأكد حول ما القيمة التي يستخدمها جيت لخيار معين من الإعدادات بتنفيذ `<git config <key`:(((git commands, config)))

[source,console]
----
$ git config user.name
John Doe
----

[NOTE]
====
في حين أنَّ جيت قد يقرأ نفس قيمة المتغير من أكثر من ملف واحد, فمن الممكن أن تحصل على قيمة لم تكن تتوقعها من هذه القيم ولا تعرف لماذا.
في حالات كهذه, تستطيع استعلام جيت عن تلك القيمة _الأصلية_, وسوف يعطيك جيت ملف التكوين الذي فيه تلك القيمة

[source,console]
----
$ git config --show-origin rerere.autoUpdate
file:/home/johndoe/.gitconfig	false
----
====
