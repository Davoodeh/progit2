[[_first_time]]
=== اولین زمان راه اندازی گیت

حالا که گیت را در سیستم خود دارید، می خواهید چند تغییر در محیط گیت خود انجام دهید.
شما باید این کارها را فقط یک بار در هر رایانه ای انجام دهید؛ سپس هماهنگی های دیگر با بروز رسانی صورت می گیرد.
شما همچنین در هر زمانی که خواستید آنها را با اجرای دستورات دوباره تغییر دهید.

گیت با یک ابزار به نام "پیکربندی گیت"همراه است که به شما امکان تنظیم کردن متغیرهای پیکربندی را می دهد که تمام جنبه های نحوه عمل گیت را کنترل می کند. (((دستورات گیت ،پیکربندی)))
این متغیرها را می توان در سه مکان مختلف ذخیره کرد:

1. `/etc/gitconfig` file: Contains values applied to every user on the system and all their repositories.
  If you pass the option `--system` to `git config`, it reads and writes from this file specifically.
  (Because this is a system configuration file, you would need administrative or superuser privilege to make changes to it.)
2. `~/.gitconfig` or `~/.config/git/config` file: Values specific personally to you, the user.
  You can make Git read and write to this file specifically by passing the `--global` option.
3. `config` file in the Git directory (that is, `.git/config`) of whatever repository you're currently using: Specific to that single repository.

Each level overrides values in the previous level, so values in `.git/config` trump those in `/etc/gitconfig`.

On Windows systems, Git looks for the `.gitconfig` file in the `$HOME` directory (`C:\Users\$USER` for most people).
It also still looks for `/etc/gitconfig`, although it's relative to the MSys root, which is wherever you decide to install Git on your Windows system when you run the installer.
If you are using version 2.x or later of Git for Windows, there is also a system-level config file at
`C:\Documents and Settings\All Users\Application Data\Git\config` on Windows XP, and in `C:\ProgramData\Git\config` on Windows Vista and newer.
This config file can only be changed by `git config -f <file>` as an admin.

==== هویت شما

اولین چیزی که باید هنگام نصب گیت انجام دهید این است که نام کاربری و آدرس ایمیل خود را تنظیم کنید.
این مهم است، زیرا که هر مشخصه گیت (گیت کامیت) از این اطلاعات استفاده می کند و مسلما به مشخصاتی که وارد می کنید استناد می شود:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

مجددا، اگر گزینه `--global` را گذرانده باشید شما می توانید این کار را فقط یک بار انجام دهید، زیرا از این به بعد گیت همیشه از این اطلاعات برای هر کاری که در آن سیستم انجام می دهید استفاده می کند.
اگر می خواهید نام یا آدرس ایمیل را برای پروژه های خاص تغییر دهید، زمانی که در آن پروژه هستید می توانید فرمان را بدون پارامتر `--global` اجرا کنید.

بسیاری از ابزارهای رابط گرافیکی کاربر هنگامی که شما برای اولین بار آنها را اجرا می کنید به شما کمک می کنند تا این کار را انجام دهید.

==== ویرایشگر شما

اکنون که هویت شما تنظیم شده است، می توانید ویرایشگر پیش فرض متن را زمانی که پیامی تایپ می کنید، پیکربندی کنید.
اگر پیکربندی نشده باشد، گیت از ویرایشگر پیش فرض سیستم شما استفاده می کند.

اگر می خواهید از یک ویرایشگر متنی دیگر مانند ای مکس استفاده کنید، می توانید موارد زیر را انجام دهید:

[source,console]
----
$ git config --global core.editor emacs
----

در سیستم ویندوز، اگر می خواهید از یک ویرایشگر متن استفاده کنید، باید برای فایل اجرایی آن مسیر دقیق را مشخص کنید.
این می تواند با توجه به نوع ویرایشگر شما بسته بندی شود.

در مورد نوت پد++، که یک ویرایشگر برنامه نویسی محبوب است، شما احتمالا می خواهید از نسخه 32 بیتی استفاده کنید، زیرا در هنگام نوشتار، نسخه 64 بیتی تمام پلاگین ها را پشتیبانی نمی کند.
اگر شما یک سیستم ویندوز 32 بیتی، یا یک ویرایشگر 64 بیتی در یک سیستم 64 بیتی دارید، می توانید به این شکل تایپ کنید:

[source,console]
----
$ git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -nosession"
----

اگر یک ویرایشگر 32 بیتی در یک سیستم 64 بیتی داشته باشید، برنامه در C: \ Program Files (x86) نصب خواهد شد:

[source,console]
----
$ git config --global core.editor "'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -nosession"
----

[NOTE]
====
وی ای ام، ای مکس و نوت پد++ ویرایشگرهای متداولی هستند که اغلب توسط توسعه دهندگان بر روی سیستم های مبتنی بر یونیکس (شبکه ای) مانند لینوکس و سیستم عامل مکینتاش و یا ویندوز استفاده می شوند. 
اگر با این ویرایشگر ها آشنا نباشید، ممکن است لازم باشد دستورالعمل های خاصی برای نحوه نصب و تنظیم ویرایشگر مورد علاقه خود را با گیت جستجو کنید.
====

[WARNING]
====
زمانی که گیت در حال راه اندازی است اگر ویرایشگر خود را به این شکل تنظیم نکنید، ممکن است دچار سردرگمی شوید.
====

==== بررسی تنظیمات شما

اگر می خواهید تنظیمات پیکربندی خود را بررسی کنید، می توانید از دستور "پیکربندی گیت – لیست" برای لیست شدن تمام تنظیمات گیت که در آن نقطه هستند استفاده کنید:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

شما ممکن است کلیدها را بیش از یک بار ببینید، زیرا  گیت همان کلید از فایل های مختلف را می خواند (`/etc/gitconfig` and `~/.gitconfig`, for example).
در این مورد، گیت با استفاده از آخرین ارزش برای هر کلید منحصر به فرد آن می بیند.

همچنین می توانید از طریق تایپ کردن آنچه گیت فکر می کند یک مقدار کلیدی خاص را بررسی کنید `git config <key>`:(((git commands, config)))

[source,console]
----
$ git config user.name
John Doe
----

[NOTE]
====
از آنجا که گیت ممکن است مقدار متغیر پیکربندی ثابتی را در بیش از یک فایل بخواند، احتمال دارد که یک مقدار غیر منتظره برای یکی از این مقادیر داشته باشید و چگونگی این قضیه را ندانید.
در مواردی مانند این شما می توانید از گیت به عنوان _مرجع_ برای جستجوی این مقدار استفاده کنید تا به شما دلیل ایجاد آن مقدار را بگوید:

[source,console]
----
$ git config --show-origin rerere.autoUpdate
file:/home/johndoe/.gitconfig	false
----
====
