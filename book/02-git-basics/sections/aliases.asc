[[_git_aliases]]
=== نام‌های مستعار در گیت

(((aliases)))
پیش از پایان بخش پایه‌های گیت، تنها یک نکته کوچک می ماند که میتواند تجربهٔ کارتان را با گیت ساده تر، آسان تر و آشناتر کند:
نام‌های مستعار (آلیاز/alias).
ما به نام‌های مستعار اشاره نخواهیم کرد یا تصور می‌کنیم که شمااز آنها در کتاب استفاده کرده‌ بودید اما شاید بهتر باشد بدانید
که چگونه با آنها کار کنید.
اگر شما دستوراتی را خلاصه یا بخش بخصوصی از آن را بنویسید گیت نمی‌تواند در بخش از دستورات شما را حدس بزند به همین دلیل
شما می‌توانید به راحتی با تنظیم الیازهایی بر روی دستوراتی که از آن استفاده می‌کنید دستورات را آنگونه که دوست دارید بنویسید.
با دستور `git config`.

برای ساخت آلیاز، مانند مثال‌های زیر آنگونه که می‌خواهید تنظیمات را اعمال کنید:

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

برای مثال -- به جای وارد کردن `git commit`،‌ شما فقط نیاز دستور `git ci` را وارد کنید.
همین طور که با گیت کار می کنید، شاید دستورات دیگری را مکرران استفاده کنید;با خیالی راحت الیازی جدید بسازید.

این تکنیک می‌تواند در ساخت دستورات جدید بسیار مفید باشد.
برای نمونه، برای رفع مشکل unstaging کردن یک فایل، می‌توانید دستور ویژه خودتان را به گیت بیافزایید:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

با این کار دو دستور زیر با هم برابراند و یک کار را انجام می‌دهند:

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

به نظر، کمی قضیه قابل فهم و روشن شد.
همچنین معمولا از دستور `last` نیز به دین صورت استفاده می‌شود:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

با این روش، به سادگی می‌توانید آخرین کامیت را مشاهده کنید.

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    Test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----


همانطور که گیت به سادگی دستورات جدید را با هرآنچه شما به عنوان نام مستعار می سازید جایگزین می کند.
با این وجود، شاید بخواهید یک دستور خارجی را اجرا کنید که آن دستور زیر مجموعه‌ی گیت باشد.
در این مورد، دستور را با علامت `!` آغاز می کنیم.
این امکان زمانی سودمند است که ابزار خودتان را برای کار با مخزن گیت بنویسید.

ما می‌توانیم با آلیاز، به جای دستور `gitk`، دستور `git visual` را بکار بگیریم. به این ترتیب:


[source,console]
----
$ git config --global alias.visual '!gitk'
----
